{"version":3,"sources":["redux/modules/search/filters.js","redux/modules/search/index.js","redux/modules/search/helpers.js","redux/modules/deck.js","redux/modules/root.js","components/FilterButton.js","components/FilterChip.js","components/FilterSideBar/FiltersApplied/index.js","components/FilterSideBar/FilterButtonsRow/index.js","components/FilterSideBar/CardTypeFilter/index.js","components/FilterSideBar/ColorFilter/index.js","components/FilterSideBar/EnergyFilter/index.js","components/FilterSideBar/ComboEnergyFilter/index.js","components/FilterSideBar/filter.utils.js","components/FilterSideBar/FilterBox/index.js","components/FilterSideBar/index.js","components/EnergyColor.js","components/Card.js","components/CardsContainer.js","App.js","registerServiceWorker.js","index.js","redux/configureStore.js"],"names":["filtersSlice","createSlice","name","initialState","reducers","addFilter","state","action","payload","id","filter","find","f","push","filterFn","removeFilter","index","findIndex","splice","updateFilter","newId","filterFound","clearFilters","actions","resultSlice","AllCards","searchCards","_","filters","length","card","filterCards","CARDS_DICTIONARY","reduce","result","cardNumber","combineReducers","filtersReducer","reducer","cardsDictionary","isSearching","initState","deck","ADD_CARD","REMOVE_CARD","RESET_DECK","rootEpic","combineEpics","action$","state$","pipe","ofType","withLatestFrom","map","search","rootReducer","type","newDeck","undefined","cardData","count","FilterButton","props","label","highlighted","onClick","customClass","className","FilterChip","onRemove","text","selectFilters","useSelector","dispatch","useDispatch","dispatchRemoveFilter","useCallback","content","startsWith","idx","key","FilterButtonsRow","title","filterGenerator","items","filterIdentifier","useState","selectedItemValues","setSelectedItemValues","selectedItemsChanged","valuesList","Object","values","onClickHandler","event","value","target","newState","buttonComponents","item","e","htmlFor","CARD_TYPES","createFilter","carTypesArray","includes","CardTypeFilter","CARD_COLORS","selectedItems","color","toLowerCase","selectedValues","energy","number","match","groups","energyCost","Number","parseInt","isNaN","comboEnergy","fieldName","filterConditions","criteriaToSearchOn","JSON","stringify","val","Array","isArray","slice","concat","valuesToSearchOn","conditionType","condition","criteria","negate","nValue","replace","toString","toLocaleLowerCase","findArrayItemsInArrayOrString","removedOptions","fieldOptsSelector","keys","sort","a","b","FilterBox","fieldOptions","onFilterAdd","obj","finalFieldOptions","option","filterText","fieldToSearch","isFilterNegation","filterValues","setFilter","onAddFilter","trim","split","txt","foundNumericCondition","RegExp","exec","foundNumericConditionFinal","onAddFilterClickHandler","origText","optionsToSelect","Fragment","defaultValue","onChange","placeholder","onKeyDown","keyCode","checked","totalCardsSelector","FilterSideBar","totalCards","ColorFilter","EnergyFilter","ComboEnergyFilter","FiltersApplied","reg","filterColors","EnergyColor","this","energyIcons","i","extraColors","Component","Card","cardInfo","cardName","skillDescription","power","comboPower","character","specialTrait","rarity","skillKeywords","relatedCharacters","relatedSpecialTraits","relatedCardNames","era","seriesName","seriesFullName","cardImageUrl","cardBack","src","alt","join","CardsContainer","cards","hasFilters","cardsComponent","connect","App","M","AutoInit","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","store","epicMiddleware","createEpicMiddleware","toolkitConfigureStore","middleware","run","configureStore","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.991347b0.chunk.js","sourcesContent":["'use stric'\nimport { createSlice } from '@reduxjs/toolkit'\n\nexport const filtersSlice = createSlice({\n    name: 'search/filters',\n    initialState: [],\n    reducers: {\n        addFilter(state, action) {\n            const { id, filter } = action.payload\n            if (state.find(f => f.id === id)) {\n                return// Avoid adding duplicated filters\n            }\n            state.push({ id, filterFn: filter })\n        },\n        removeFilter(state, action) {\n            const { id } = action.payload\n            const index = state.findIndex(f => f.id === id)\n            if (-1 === index) {\n                return// No filter found\n            }\n            state.splice(index, 1)\n        },\n        updateFilter(state, action) {\n            const { id, newId, filter } = action.payload\n            const filterFound = state.find(f => f.id === id)\n            if (filterFound) {\n                filterFound.id = newId || id\n                filterFound.filterFn = filter\n                return// Can't update a non existant filter\n            }\n\n            // Since no filter found, let's add a new filter instead\n            state.push({ id: newId || id, filterFn: filter })\n        },\n        clearFilters() {\n            return []\n        }\n    }\n})\n\n// Actions\nexport const { addFilter, removeFilter, updateFilter, clearFilters } = filtersSlice.actions\n\n// Reducer\nexport default filtersSlice.reducer","'use stric'\nimport { combineReducers } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit'\nimport { ofType } from 'redux-observable'\nimport { map, withLatestFrom } from 'rxjs/operators'\n\nimport { cards as AllCards } from '../../../cards.json'\nimport { filterCards } from './helpers' \nimport filtersReducer, { addFilter, updateFilter, removeFilter } from './filters' \n\n\nconst resultSlice = createSlice({\n    name: 'search/result',\n    initialState: AllCards,\n    reducers: {\n        searchCards(_, action) {\n            const { filters } = action.payload\n            // const t0 = performance.now()\n            return filterCards(AllCards, filters)\n            // const t1 = performance.now()\n            // console.log(`Filtering cards took \"${t1 - t0}\" miliseconds.`, state.length)\n        }\n    }\n})\n\nconst CARDS_DICTIONARY = AllCards.reduce(\n    (result, card) => {\n        result[card.cardNumber] = card\n        return result\n    },\n    {}\n)\n\n// Actions\nexport const { searchCards } = resultSlice.actions\n\n// Reducer\nexport default combineReducers({\n    filters: filtersReducer,\n    result: resultSlice.reducer,\n    cardsDictionary: () => CARDS_DICTIONARY,\n    isSearching: () => false\n})\n\n// Side effects\nexport const updateSearchEpic = (action$, state$)  => action$.pipe(\n    ofType(addFilter, updateFilter, removeFilter),\n    withLatestFrom(state$),\n    map(([, state]) => {\n        const { search: { filters } } = state\n        return searchCards({ filters })\n    })\n)\n","'use stric'\n\nexport const filterCards = (AllCards, filters = []) => {\n    if (filters.length === 0) {\n        return AllCards\n    }\n\n    return AllCards.filter(\n        card => {\n            for (let index = 0; index < filters.length; index++) {\n                if (!filters[index].filterFn(card)) {\n                    return false\n                }\n            }\n            return true\n        }\n    )\n}\n","'use stric';\n\n// import 'rxjs/add/operator/map';\n// import 'rxjs/add/operator/do';\n// import 'rxjs/add/operator/ignoreElements';\n\n// Initial State\nconst initState = {\n    deck: {}\n}\n\n\n// Actions\nconst\n    ADD_CARD = 'dbs-scraper/deck/ADD_CARD',\n    REMOVE_CARD = 'dbs-scraper/deck/REMOVE_CARD',\n    RESET_DECK = 'dbs-scraper/deck/RESET_DECK'\n\n\n// Reducer\nexport default function reducer(state = initState, action = {}) {\n    switch(action.type) {\n\n        case ADD_CARD: {\n            const newDeck = { ...state.deck }\n            if (newDeck[ action.card.cardNumber ] === undefined) {\n                newDeck[ action.card.cardNumber ] = { \n                    cardData: action.card,\n                    count: 0\n                }\n            }\n\n            newDeck[ action.card.cardNumber ].count++\n            return { ...state, ...{ deck: newDeck } }\n        }\n\n        case REMOVE_CARD: {\n            if (state.deck[ action.card.cardNumber ] === undefined) {\n                return state// Nothing to do, card was never in the deck\n            }\n\n            const newDeck = { ...state.deck }\n            newDeck[ action.card.cardNumber ].count--\n            if (newDeck[ action.card.cardNumber ].count < 1) {\n                delete newDeck[ action.card.cardNumber ]\n            }\n            return { ...state, ...{ deck: newDeck } }\n        }\n\n        case RESET_DECK:\n            return { ...state, ...{ deck: {} } }\n        \n\n        default:  return state\n    }\n}\n\n\n// Action Creators\nexport const addCard = card => ({\n    type: ADD_CARD,\n    card\n})\n\nexport const removeCard = card => ({\n    type: REMOVE_CARD,\n    card\n})\n\nexport const resetDeck = () => ({\n    type: RESET_DECK\n})\n\n","'use stric';\n\nimport { combineEpics } from 'redux-observable';\nimport { combineReducers } from 'redux';\nimport search, { updateSearchEpic } from './search'\nimport deck from './deck'\n\nexport const rootEpic = combineEpics(\n\n  // Search\n  updateSearchEpic//, searchCardsEpic\n);\n\nexport const rootReducer = combineReducers({\n    search, deck\n});","import React from 'react'\nimport './FilterButton.css'\n\n\nconst FilterButton = (props) => {\n    const { \n        label = '', \n        highlighted = false,\n        id, onClick\n    } = props\n    const customClass = highlighted ? ' filter-on' : ''\n\n    return (\n        <label id={id || label} className={'btn btn-secondary' + customClass} onClick={onClick}>\n            {label}\n        </label>\n    )\n}\n\nexport default FilterButton\n","import React from 'react';\n\nconst FilterChip = (props) => {\n    const { onRemove, text } = props;\n    return (\n        <div className=\"chip\">\n            <span>{text}</span>\n            <i className=\"material-icons filter-chip\" onClick={onRemove}>close</i>\n        </div>\n    )\n}\n\nexport default FilterChip","import React, { useCallback } from 'react'\nimport { useSelector, useDispatch  } from 'react-redux'\nimport { removeFilter } from '../../../redux/modules/search/filters'\nimport FilterChip from '../../FilterChip'\n\nconst selectFilters = ({ search }) => search.filters\n\nexport const IDENTIFIER_PREFIX = '_$hide:'\nexport default () => {\n    const filters = useSelector(selectFilters)\n    const dispatch = useDispatch()\n    \n    const dispatchRemoveFilter = useCallback(\n        id => dispatch( removeFilter({id}) ),\n        [dispatch]\n    )\n\n    const filtersToShow = filters.filter(\n        ({ id }) => !id.startsWith(IDENTIFIER_PREFIX)\n    )\n    \n    const content = filtersToShow.map(\n        ({ id }, idx) => <FilterChip key={id + idx} text={id} onRemove={() => dispatchRemoveFilter(id)} />\n    )\n\n    return (\n        <div className=\"col s12\">\n            {content}\n        </div>\n    )\n}\n","import React, { useState, useCallback } from 'react'\nimport FilterButton from '../../FilterButton'\nimport { useDispatch } from 'react-redux'\nimport { updateFilter, removeFilter } from '../../../redux/modules/search/filters'\nimport { IDENTIFIER_PREFIX } from '../FiltersApplied'\n\n\nconst FilterButtonsRow = (props) => {\n    const {\n        title = 'filterRow',\n        filterGenerator,\n        items\n    } = props\n\n    const filterIdentifier = IDENTIFIER_PREFIX + title\n\n    const [selectedItemValues, setSelectedItemValues] = useState({})\n    const dispatch = useDispatch()\n\n    const selectedItemsChanged = useCallback((items) => {\n        const valuesList = Object.values(items)\n        if (valuesList.length > 0) {\n            dispatch( updateFilter({\n                id: filterIdentifier, filter: filterGenerator(valuesList)\n            }) )\n            return\n        }\n\n        dispatch( removeFilter({ id: filterIdentifier }) )\n    }, [dispatch, filterIdentifier, filterGenerator])\n\n    const onClickHandler = useCallback(\n        (event, value) => {\n            const { target: { id } } = event;\n            const newState = { ...selectedItemValues }\n            const isSelected = undefined !== selectedItemValues[id]\n            \n            if (isSelected) {\n                delete newState[id]\n            }\n            else {// Not selected\n                newState[id] = value\n            }\n\n            setSelectedItemValues(newState)\n            selectedItemsChanged(newState)\n        },\n        [selectedItemValues, setSelectedItemValues, selectedItemsChanged]\n    )\n\n    const buttonComponents = items.map(\n        (item, index) => {\n            const id = `filter-button-${title}-${item.label}-${index}`\n            return (\n                <FilterButton\n                    id={id}\n                    key={item.value + item.label}\n                    label={item.label}\n                    highlighted={selectedItemValues[id] !== undefined}\n                    onClick={e => onClickHandler(e, item.value)}\n                />\n            )\n        }\n    )\n\n    return (\n        <div className=\"input-field col s12\">\n            <div htmlFor=\"type\">{title}</div>\n            <div className=\"mx-auto btn-group-toggle btn-group\">\n                {buttonComponents}\n            </div>\n        </div>\n    )\n}\n\nexport default FilterButtonsRow","import React from 'react'\nimport FilterButtonsRow from '../FilterButtonsRow'\n\n\nconst CARD_TYPES = [\n    { value: 'BATTLE', label: 'BATTLE' },\n    { value: 'EXTRA', label: 'EXTRA' },\n    { value: 'LEADER', label: 'LEADER' }\n]\n\nconst createFilter = (carTypesArray = []) => {\n    return card => carTypesArray.includes(card.type)\n}\n\nconst CardTypeFilter = () => {\n    return (\n        <FilterButtonsRow\n            title={'Card Type'}\n            filterGenerator={createFilter}\n            items={CARD_TYPES}\n        />\n    )\n}\n\nexport default CardTypeFilter","import React from 'react'\nimport FilterButtonsRow from '../FilterButtonsRow'\n\n\nconst CARD_COLORS = [\n    { value: 'black', label: 'B' },\n    { value: 'blue', label: 'U' },\n    { value: 'green', label: 'G' },\n    { value: 'yellow', label: 'Y' },\n    { value: 'red', label: 'R' },\n    { value: 'red/green', label: 'R/G' },\n    { value: 'blue/yellow', label: 'U/Y' },\n    { value: 'red/yellow', label: 'R/Y' },\n    { value: 'blue/green', label: 'U/G' },\n    { value: 'red/blue', label: 'R/U' },\n    { value: 'green/yellow', label: 'G/Y' },\n]\n\nconst createFilter = (selectedItems = []) => {\n    return card => {\n        const value = card.color.toLowerCase()\n\n        return selectedItems.find(\n            item => value === item\n        )\n    }\n}\n\n\nconst CardTypeFilter = () => {\n    return (\n        <FilterButtonsRow\n            title={'Color'}\n            filterGenerator={createFilter}\n            items={CARD_COLORS}\n        />\n    )\n}\n\nexport default CardTypeFilter\n","import React from 'react'\nimport FilterButtonsRow from '../FilterButtonsRow'\n\n\nconst CARD_TYPES = [\n    { value: 0, label: '0' },\n    { value: 1, label: '1' },\n    { value: 2, label: '2' },\n    { value: 3, label: '3' },\n    { value: 4, label: '4' },\n    { value: 5, label: '5' },\n    { value: 6, label: '6+' },\n]\n\nconst createFilter = (selectedValues = []) => {\n    return card => {\n        if (typeof card.energy !== 'string') {\n            return false\n        }\n        \n        const { groups: { number } } = card.energy.match(/^(?<number>\\d*)/)\n        if (number.length === 0) {\n            return false\n        }\n        \n        const energyCost = Number.parseInt(number, 10)\n        if (Number.isNaN(energyCost)) {\n            return false\n        }\n        \n        return undefined !== selectedValues.find(\n            item => {\n                if (item === 6) {\n                    return energyCost >= item \n                }\n\n                return item === energyCost\n            }\n        )\n    }\n}\n\nconst CardTypeFilter = () => {\n    return (\n        <FilterButtonsRow\n            title={'Energy Cost'}\n            filterGenerator={createFilter}\n            items={CARD_TYPES}\n        />\n    )\n}\n\nexport default CardTypeFilter","import React from 'react'\nimport FilterButtonsRow from '../FilterButtonsRow'\n\n\nconst CARD_TYPES = [\n    { value: 0, label: '0' },\n    { value: 1, label: '1' },\n    { value: 2, label: '2' },\n]\n\nconst createFilter = (selectedValues = []) => {\n    return card => {\n        if (typeof card.comboEnergy !== 'string') {\n            return false\n        }\n        \n        const { groups: { number } } = card.comboEnergy.match(/^(?<number>\\d*)/)\n        if (number.length === 0) {\n            return false\n        }\n        \n        const energyCost = Number.parseInt(number, 10)\n        if (Number.isNaN(energyCost)) {\n            return false\n        }\n        \n        return undefined !== selectedValues.find(\n            item => {\n                return item === energyCost\n            }\n        )\n    }\n}\n\nconst CardTypeFilter = () => {\n    return (\n        <FilterButtonsRow\n            title={'Combo Energy'}\n            filterGenerator={createFilter}\n            items={CARD_TYPES}\n        />\n    )\n}\n\nexport default CardTypeFilter","const NUMERIC_REGEXP = '^(?<condition>[<>]=?)\\\\s*?(?<criteria>\\\\d+)'\nconst NUMERIC_REGEXP_WITH_OPERATORS = '^(?<criteria>\\\\d+)\\\\s*?(?<condition>[+-])'\n\nconst findArrayItemsInArrayOrString = (filterConditions, valuesToSearchOn) => {\n    return !!filterConditions.find(values => {\n        const { conditionType, condition, criteria, negate } = values\n        return valuesToSearchOn.find(\n            value => {\n                if (conditionType === 'numeric') {\n                    const nValue = Number(value.replace(/\\D+/g, \"\"))\n                    switch (condition) {\n                        case '<': return nValue < Number(criteria)\n                        case '>': return nValue > Number(criteria)\n                        case '<=': \n                        case '-': return nValue <= Number(criteria)\n                        case '>=':\n                        case '+': return nValue >= Number(criteria)\n                        default: break\n                    }\n                }\n\n                const val = value.toString().toLocaleLowerCase().includes(criteria.toString().toLocaleLowerCase())\n                return negate ? !val : val\n            }\n        )\n    })\n}\n\nexport const getFieldsToSearch = (card) => {\n    const struct = Object.keys(card).reduce(\n        (result, fieldName) => {\n            let type = typeof card[fieldName]\n            if (Array.isArray( card[fieldName] )) {\n                type = 'array'\n            }\n\n            result.push({ fieldName, type, label: fieldName })\n            return result\n        },\n        []\n    ).sort(\n        (a, b) => {\n            if (a.label > b.label) return 1\n            else if (a.label < b.label) return -1\n            return 0\n        }\n    )\n\n    return struct\n}\n\nexport const isInFilters = (ar, field, current) => (\n    ar.find(({ id })=> id.toLocaleLowerCase().startsWith(field.toLocaleLowerCase()) && id.toLocaleLowerCase().includes(current.toLocaleLowerCase()))\n)\n\n\nexport const parseFilterText = text => {\n    const criteriaArray = text.trim().toLocaleLowerCase().split(/\\s*\\|\\|\\s*/gm)\n    return criteriaArray.map(\n        txt => {\n            const foundNumericCondition = (new RegExp(NUMERIC_REGEXP, 'g')).exec(txt)\n            const foundNumericConditionFinal = foundNumericCondition ? foundNumericCondition : (new RegExp(NUMERIC_REGEXP_WITH_OPERATORS, 'g')).exec(txt) \n            if (foundNumericConditionFinal) {\n                const { groups: { condition, criteria } } = foundNumericConditionFinal\n                return { conditionType: 'numeric', criteria: criteria.includes('not') ? criteria.split(/\\s/gm)[1] : criteria, condition, negate: criteria.includes('not') }\n            }\n            return { conditionType: 'contains', criteria: txt.includes('not') ? txt.split(/\\s/gm)[1].trim() : txt, negate: txt.includes('not') }\n        }\n    )\n}\n\nexport const createFilter = (fieldName, filterConditions, type) => {\n    let filter = card => {\n        let criteriaToSearchOn\n        if (type === 'object') {// no implementation yet, so we search in the whole object\n            criteriaToSearchOn = [JSON.stringify( card[fieldName] )]\n        }\n        else {\n            let val = card[fieldName]\n            if (val === null || val === undefined) {\n                return false\n            }\n            criteriaToSearchOn = Array.isArray(val) ? val.slice() : [val]\n            // We look for the field in the back of the card and add it to our search\n            if (card['cardBack'] && card['cardBack'][fieldName]) {\n                val = card['cardBack'][fieldName]\n                if (Array.isArray(val)) {\n                    criteriaToSearchOn = criteriaToSearchOn.concat(val)\n                }\n                else {\n                    criteriaToSearchOn.push( val )\n                }\n            }\n        }\n\n        return findArrayItemsInArrayOrString(filterConditions, criteriaToSearchOn)\n    }\n    return filter\n}\n","import React, { useState, useCallback } from 'react'\nimport { useSelector, useDispatch  } from 'react-redux'\nimport { addFilter } from '../../../redux/modules/search/filters'\n\nimport { \n    createFilter,\n    getFieldsToSearch,\n    parseFilterText\n} from '../filter.utils'\n\nconst removedOptions = [\n    'availableDate', 'cardImageUrl', 'cardBack', 'era', 'type', 'color', 'energy', 'comboEnergy',\n    /*'rarity', 'character', 'skillKeywords', 'cardNumber', */\n]\n\nconst fieldOptsSelector = ({ search }) => getFieldsToSearch(\n    search.cardsDictionary[ Object.keys(search.cardsDictionary)[4] ]\n)\n\nconst FilterBox = () => {\n    const fieldOptions = useSelector(fieldOptsSelector)\n    const dispatch = useDispatch()\n    const onFilterAdd = useCallback(\n        obj => dispatch( addFilter(obj) )\n    , [dispatch])\n\n\n    const finalFieldOptions = fieldOptions.filter(\n        option => !removedOptions.includes(option)\n    ).sort()\n\n    const [ filterValues, setFilter ] = useState({ filterText: '', fieldToSearch: finalFieldOptions[0], isFilterNegation: false })\n    const { filterText, isFilterNegation } = filterValues\n\n    const onAddFilter = (type, fieldName, filterText, isFilterNegation) => {\n        if (typeof filterText !== 'string') {\n            return// Empty string\n        }\n\n        if(isFilterNegation)\n            filterText = 'not ' + filterText\n        const filterConditions = parseFilterText(filterText)\n        const filter = createFilter(fieldName, filterConditions, type)\n        onFilterAdd({ id: `${fieldName}: ${filterText}`, filter })\n    }\n\n    const onAddFilterClickHandler = _ => {\n        const { filterText: origText, fieldToSearch: { type, fieldName }, isFilterNegation } = filterValues\n        let filterText = origText.trim()\n        onAddFilter(type, fieldName, filterText, isFilterNegation)\n    }\n\n    const onFieldSelectionChangeHandler = event => {\n        setFilter({ ...filterValues, fieldToSearch: finalFieldOptions[event.target.value] })\n    }\n\n    const onFilterTextChangeHandler = (event) => {\n        setFilter({ ...filterValues, filterText: event.target.value })\n    }\n\n    const onNegationFilterChangeHandler = (event) => {\n        setFilter({ ...filterValues, isFilterNegation: event.target.checked })\n    }\n\n    const onInputTextKeyDownHandler = (event) => {\n        const isEnter = event.keyCode === 13\n        if (isEnter) {\n            onAddFilterClickHandler()\n        }\n    }\n\n    const optionsToSelect = finalFieldOptions.map(\n        (option, index) => (\n            <option key={option.fieldName} value={index}>\n                {option.label}\n            </option>\n        )\n    )\n\n    return (\n        <React.Fragment>\n            <div className=\"input-field col s12\">\n                <select id=\"filter-box-type-input\" defaultValue={0} onChange={onFieldSelectionChangeHandler}> {optionsToSelect} </select>\n                <label htmlFor=\"filter-box-type-input\">Field</label>\n            </div>\n\n            <div className=\"input-field col s12\">\n                <input\n                    id=\"filter-box-criteria-input\"\n                    type=\"text\" placeholder=\"For an OR operation use ||\"\n                    value={filterText}\n                    onChange={onFilterTextChangeHandler}\n                    onKeyDown={onInputTextKeyDownHandler} />\n                <label htmlFor=\"filter-box-criteria-input\">Search</label>\n            </div>\n\n            <div className=\"input-field col s3\">\n                <label>\n                    <input type=\"checkbox\" checked={isFilterNegation} onChange={onNegationFilterChangeHandler}/>\n                    <span>\n                        { isFilterNegation ? 'Not' : null }\n                    </span>\n                </label>\n            </div>\n\n            <div className=\"input-field col s3\">\n                <span><button className=\"waves-effect waves-light btn\" onClick={onAddFilterClickHandler}>Add</button></span>\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default FilterBox\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport './index.css'\n\nimport CardTypeFilter from './CardTypeFilter'\nimport ColorFilter from './ColorFilter'\nimport EnergyFilter from './EnergyFilter'\nimport ComboEnergyFilter from './ComboEnergyFilter'\nimport FiltersApplied from './FiltersApplied'\nimport FilterBox from './FilterBox'\n\nconst totalCardsSelector = ({ search }) => search.result.length\n\nconst FilterSideBar = () => {\n    const totalCards = useSelector(totalCardsSelector)\n\n    return (\n        <div className=\"col s12 filter-box white-text\">\n            <div className=\"row\">\n                <CardTypeFilter />\n                <ColorFilter />\n                <EnergyFilter />\n                <ComboEnergyFilter />\n                \n                {/* <div className=\"input-field col s12\">\n                    <select id=\"rarity\" className=\"mx-auto btn-group-toggle btn-group\">\n                        <option value=\"\">Rarity</option>\n                        <option value=\"Common[C]\">Common[C]</option>\n                        <option value=\"Rare[R]\">Rare[R]</option>\n                        <option value=\"Starter Rare[ST]\">Starter Rare[ST]</option>\n                        <option value=\"Super Rare[SR]\">Super Rare[SR]</option>\n                        <option value=\"Uncommon[UC]\">Uncommon[UC]</option>\n                        <option value=\"Other\">Other</option>\n                    </select>\n                </div> */}\n                {/* <div className=\"input-field col s12\">\n                    <select id=\"character\" className=\"mx-auto btn-group-toggle btn-group\">\n                        <option value=\"\">Character</option>\n                        <option value=\"Common[C]\">Common[C]</option>\n                        <option value=\"Rare[R]\">Rare[R]</option>\n                        <option value=\"Starter Rare[ST]\">Starter Rare[ST]</option>\n                        <option value=\"Super Rare[SR]\">Super Rare[SR]</option>\n                        <option value=\"Uncommon[UC]\">Uncommon[UC]</option>\n                        <option value=\"Other\">Other</option>\n                    </select>\n                </div> */}\n                {/* <div className=\"input-field col s12\">\n                    <select id=\"skillKeywords\" className=\"mx-auto btn-group-toggle btn-group\">\n                        <option value=\"\">Skill Keywords</option>\n                        <option value=\"Common[C]\">Common[C]</option>\n                        <option value=\"Rare[R]\">Rare[R]</option>\n                        <option value=\"Starter Rare[ST]\">Starter Rare[ST]</option>\n                        <option value=\"Super Rare[SR]\">Super Rare[SR]</option>\n                        <option value=\"Uncommon[UC]\">Uncommon[UC]</option>\n                        <option value=\"Other\">Other</option>\n                    </select>\n                </div> */}\n            </div>\n\n            <FilterBox />\n\n            <div className=\"row\">\n                <FiltersApplied />\n            </div>\n            <div className=\"row\">\n                <span className=\"white-text\">Total of cards: {totalCards}</span>\n            </div>\n        </div>\n    )\n}\n\nexport default FilterSideBar","import React, { Component } from 'react'\nimport './EnergyColor.css'\n\nconst\n    reg = /[\\dbugyr]+/g,\n    filterColors = e => e.match(reg),\n    iconPrinter = e => filterColors(e).map((i, index) => {\n        const key = i + index\n        if (!isNaN(Number(i))) {\n            let extraColors = filterColors(e).length - 1\n            if (i-extraColors > 0)\n                return <span key={key} className=\"energy-color white\">{i-extraColors}</span> \n            else\n                return null\n        }\n\n        switch (i) {\n          case 'b':\n              return <span key={key} className=\"energy-color light-blue accent-4\"></span>\n          case 'g':\n              return <span key={key} className=\"energy-color green accent-4\"></span>\n          case 'r':\n              return <span key={key} className=\"energy-color red accent-4\"></span>\n          case 'y':\n              return <span key={key} className=\"energy-color yellow accent-2\"></span>\n          default:\n              return <span key={key} className=\"energy-color white\">{i}</span>\n        }\n    })\n\nclass EnergyColor extends Component {\n\n    render() {\n        const { energy } = this.props\n        if (!energy) {\n            return <span>{energy}</span>\n        }\n        \n        const energyIcons = iconPrinter(energy)\n        return (\n            <span>\n                {energyIcons}\n            </span>\n        )\n    }\n}\n\nexport default EnergyColor\n","import React, { Component } from 'react';\nimport './Card.css'\nimport EnergyColor from './EnergyColor';\n\nclass Card extends Component {\n\n    render() {\n        const { cardInfo } = this.props;\n        const {\n            type, cardName, energy, color, skillDescription, power, comboPower, comboEnergy,\n            character, specialTrait, rarity, cardNumber, skillKeywords, relatedCharacters,\n            relatedSpecialTraits, relatedCardNames, era, seriesName, seriesFullName, \n            cardImageUrl, cardBack\n        } = cardInfo\n\n        return (\n            <div className=\"col s12 card teal lighten-3\">\n                <div className=\"row\">\n                    <div className=\"col m4 l3 card-image hide-on-small-only\">\n                        <img src={cardImageUrl} alt={cardName} />\n                    </div>\n\n                    <div className=\"col s12 m8 l9 card-content\">\n                        <div className=\"col s12\">\n                            <span className=\"card-title\">{cardName} <sup>({cardNumber} {rarity})</sup></span>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col s3\">\n                                <span className=\"fieldname white-text\">Type:</span><span className=\"field-data\">{type}</span>\n                            </div>\n\n                            <div className=\"col s3\">\n                                <span className=\"fieldname white-text\">Color:</span><span className=\"field-data\">{color}</span>\n                            </div>\n\n                            { ! (type === 'LEADER') ? (\n                                <div className=\"col s6\">\n                                    <span className=\"fieldname white-text\">Energy:</span>\n                                    <span className=\"field-data\"><EnergyColor energy={energy} /></span>\n                                </div>\n                                ) : null\n                            }\n                        </div>\n                        { ! (type === 'EXTRA') ? (\n                            <React.Fragment>\n                            <div className=\"row\">\n                                <div className=\"col s3\">\n                                    <span className=\"fieldname white-text\">Power:</span><span className=\"field-data\">{power}</span>\n                                </div>\n                                { type === 'BATTLE' ? (\n                                    <div className=\"col s4 l3\">\n                                        <span className=\"fieldname white-text\">Combo:</span>\n                                        <span className=\"field-data\">\n                                            <EnergyColor energy={comboEnergy}/>\n                                            <span className=\"field-data\">+ {comboPower}</span>\n                                        </span>\n                                    </div>\n                                    ) : null\n                                }\n\n                                <div className=\"col s5 l6\">\n                                    <span className=\"fieldname white-text\">Era:</span><span className=\"field-data\">{era}</span>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col s6\">\n                                    <span className=\"fieldname white-text\">Character:</span><span className=\"field-data\">{character}</span>\n                                </div>\n\n                                <div className=\"col s6\">\n                                    <span className=\"fieldname white-text\">Special Trait:</span><span className=\"field-data\">{specialTrait}</span>\n                                </div>\n                            </div>\n\n                            </React.Fragment>\n                            ) : null\n                        }\n                        { relatedCharacters.length > 0 ? (\n                            <div className=\"col s12 m6\">\n                                <span className=\"fieldname white-text\">Related Characters:</span><span className=\"field-data\">{relatedCharacters.join(', ')}</span>\n                            </div>\n                            ) : null\n                        }\n                        { relatedSpecialTraits.length > 0 ? (\n                            <div className=\"col s12 m6\">\n                                <span className=\"fieldname white-text\">Related Special Traits:</span><span className=\"field-data\">{relatedSpecialTraits.join(', ')}</span>\n                            </div>\n                            ) : null\n                        }\n                        { relatedCardNames.length > 0 ? (\n                            <div className=\"col s12 m6\">\n                                <span className=\"fieldname white-text\">Related Card Names:</span><span className=\"field-data\">{relatedCardNames.join(', ')}</span>\n                            </div>\n                            ) : null\n                        }\n                        <div className=\"col s12\">\n                            <span className=\"fieldname white-text\">Series Full Name:</span><span className=\"field-data\">{seriesName} - {seriesFullName}</span>\n                        </div>\n                        <div className=\"col s12\">\n                            <span className=\"fieldname white-text\">Skill Keywords:</span><span className=\"field-data\">{skillKeywords.join(', ')}</span>\n                        </div>\n                        <div className=\"col s12\">\n                            <span className=\"fieldname white-text\">Skill:</span><span className=\"field-data\"><pre>{skillDescription}</pre></span>\n                        </div>\n                    </div>\n                </div>\n                { cardBack ? (\n                    <div className=\"row\">\n                        <div className=\"col m4 l3 card-image hide-on-small-only\">\n                            <img src={cardBack.cardImageUrl} alt={cardName} />\n                        </div>\n                        <div className=\"col s12 m8 l9 card-content\">\n                            <div className=\"row\">\n                                <div className=\"col s12\">\n                                    <span className=\"card-title\">{cardBack.cardName}</span>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col s3\">\n                                    <span className=\"fieldname white-text\">Type:</span><span className=\"field-data\">{type}</span>\n                                </div>\n\n                                <div className=\"col s3\">\n                                    <span className=\"fieldname white-text\">Color:</span><span className=\"field-data\">{cardBack.color}</span>\n                                </div>\n\n                                <div className=\"col s3\">\n                                    <span className=\"fieldname white-text\">Power:</span><span className=\"field-data\">{cardBack.power}</span>\n                                </div>\n\n                                <div className=\"col s6\">\n                                    <span className=\"fieldname white-text\">Character:</span><span className=\"field-data\">{cardBack.character}</span>\n                                </div>\n\n                                <div className=\"col s6\">\n                                    <span className=\"fieldname white-text\">Special Trait:</span><span className=\"field-data\">{cardBack.specialTrait}</span>\n                                </div>\n\n                                { cardBack.relatedCharacters.length > 0 ? (\n                                    <div className=\"col s12 m6\">\n                                        <span className=\"fieldname white-text\">Related Characters:</span><span className=\"field-data\">{cardBack.relatedCharacters.join(', ')}</span>\n                                    </div>\n                                    ) : null\n                                }\n                                { cardBack.relatedSpecialTraits.length > 0 ? (\n                                    <div className=\"col s12 m6\">\n                                        <span className=\"fieldname white-text\">Related Special Traits:</span><span className=\"field-data\">{cardBack.relatedSpecialTraits.join(', ')}</span>\n                                    </div>\n                                    ) : null\n                                }\n                                { cardBack.relatedCardNames.length > 0 ? (\n                                    <div className=\"col s12 m6\">\n                                        <span className=\"fieldname white-text\">Related Card Names:</span><span className=\"field-data\">{cardBack.relatedCardNames.join(', ')}</span>\n                                    </div>\n                                    ) : null\n                                }\n                                <div className=\"col s12\">\n                                    <span className=\"fieldname white-text\">Skill Keywords:</span><span className=\"field-data\">{cardBack.skillKeywords.join(', ')}</span>\n                                </div>\n                                <div className=\"col s12\">\n                                    <span className=\"fieldname white-text\">Skill:</span><span className=\"field-data\"><pre>{cardBack.skillDescription}</pre></span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    ) : null\n                }\n\n            </div>\n        )\n    }\n}\n\nexport default Card;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Card from './Card';\n\n\nconst MAX_CARDS_TO_SHOW = 200\n\nclass CardsContainer extends Component {\n\n    render() {\n        const { cards, hasFilters } = this.props\n\n        if ( !hasFilters ) {\n            return 'Add some filters to search cards'\n        }\n\n        if (cards.length === 0) {\n            return 'Found 0 cards with that criteria'\n        }\n\n        const cardsComponent = cards.slice(0, MAX_CARDS_TO_SHOW).map( card => <Card key={card.cardNumber} cardInfo={card}/> )\n        return (\n            <React.Fragment>\n                { cards.length > MAX_CARDS_TO_SHOW ? \n                    <div>Showing first {MAX_CARDS_TO_SHOW} cards</div>\n                    : null\n                }\n                {cardsComponent}\n            </React.Fragment>\n        )\n    }\n}\n\nconst\n    mapStateToProps = ({ search }) => ({\n        cards: search.result,\n        hasFilters: search.filters.length > 0\n    }),\n    mapDispatchToProps = null\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardsContainer);\n","import React, { Component } from 'react'\nimport 'materialize-css/dist/css/materialize.min.css'\nimport M from \"materialize-css\"\nimport './App.css'\nimport FilterSideBar from './components/FilterSideBar'\nimport CardsContainer from './components/CardsContainer'\n\nclass App extends Component {\n\n    componentDidMount() {\n        M.AutoInit()\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"row\">\n                    <div className=\"App-header grey darken-3 col s12 m4 l3\">\n                        <FilterSideBar />\n                    </div>\n                    <div className=\"col s12 m8 l9\">\n                        <CardsContainer />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './redux/configureStore';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst store = configureStore();\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\nregisterServiceWorker();\n","import { configureStore as toolkitConfigureStore } from '@reduxjs/toolkit'\nimport { createEpicMiddleware } from 'redux-observable';\nimport { rootEpic, rootReducer } from './modules/root';\n\n\nexport default function configureStore() {\n    const epicMiddleware = createEpicMiddleware();\n    const store = toolkitConfigureStore({\n        reducer: rootReducer,\n        middleware: [ epicMiddleware ]\n    });\n    epicMiddleware.run(rootEpic);\n\n    return store;\n}"],"sourceRoot":""}